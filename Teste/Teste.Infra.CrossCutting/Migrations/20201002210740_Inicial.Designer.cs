// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teste.Infra.CrossCutting.JobConfiguration;

namespace Teste.Infra.CrossCutting.Migrations
{
    [DbContext(typeof(JobConfigurationContexto))]
    [Migration("20201002210740_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Teste.Infra.CrossCutting.JobConfiguration.Entities.ConfiguracaoJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IntervaloExecucao")
                        .HasColumnType("int");

                    b.Property<int>("IntervaloExecucaoTipoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ConfiguracaoJob");
                });

            modelBuilder.Entity("Teste.Infra.CrossCutting.JobConfiguration.Entities.ConfiguracaoJobAgendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConfiguracaoJobId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HorarioAgendamento")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracaoJobId");

                    b.ToTable("ConfiguracaoJobAgendamento");
                });

            modelBuilder.Entity("Teste.Infra.CrossCutting.JobConfiguration.Entities.ConfiguracaoJobAgendamento", b =>
                {
                    b.HasOne("Teste.Infra.CrossCutting.JobConfiguration.Entities.ConfiguracaoJob", "ConfiguracaoJob")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ConfiguracaoJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
